/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package nienluancoso;

import controller.controllerInput;
import controller.controllerInputListJDialog;
import controller.controllermain;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Random;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.SwingConstants;
import model.listSort;
import model.oSo;



/**
 *
 * @author Tan Huy
 */
public class ViewMain extends javax.swing.JFrame {
    private static ViewMain frame;
    private final LinkedList<Integer> arrayList_1 = new LinkedList<Integer>();
    private final LinkedList<oSo> arrayListOSo_1 = new LinkedList<oSo>();
    private final LinkedList listSortName = new listSort().listSortName;
    private JRadioButton listJRadioFirst[] = new JRadioButton[listSortName.size()];
    private final ButtonGroup listJRadioFirstButtonGroup = new ButtonGroup();
    private int firstSelected = -1;
    private int chieuSapXep = 1;
    private final controllermain controller = new controllermain();
    
    
    /**
     * Creates new form ViewMain
     */
    public ViewMain() {
        initComponents();
        setTitle("NIÊN LUẬN CƠ SỞ NGÀNH KTPM - HUỲNH TẤN HUY B1906674");
        setLocationRelativeTo(null);
        setResizable(false);
        setEnabledController(true,true); 
    }
    private void setEnabledController(boolean t1,boolean t2){
        controllerControlStartButton.setEnabled(t1);
        controllerControlStopButton.setEnabled(t2);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        ViewRootPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        controllerinput = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        controllerInputnumberSpinner = new javax.swing.JSpinner();
        controllernumberbyhand = new javax.swing.JButton();
        controllerInputNumberByRandom = new javax.swing.JButton();
        controllerdelete = new javax.swing.JButton();
        controllerSourceCode = new javax.swing.JPanel();
        controllerSelectAlgorithm = new javax.swing.JPanel();
        controllerControll = new javax.swing.JPanel();
        controllerControlStartButton = new javax.swing.JButton();
        controllerControlStopButton = new javax.swing.JButton();
        controllerOrder = new javax.swing.JPanel();
        controllerSortOrderIncrease = new javax.swing.JRadioButton();
        controllerSortOrderDecrease = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        moFlileJMenu = new javax.swing.JMenu();
        moFlile = new javax.swing.JMenuItem();
        Gioithieu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setTitle("Khung Chạy Mô Phỏng Các Thuật Toán");
        jInternalFrame1.setVisible(true);

        ViewRootPanel.setBackground(new java.awt.Color(204, 204, 204));
        ViewRootPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khung chạy mô phỏng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        javax.swing.GroupLayout ViewRootPanelLayout = new javax.swing.GroupLayout(ViewRootPanel);
        ViewRootPanel.setLayout(ViewRootPanelLayout);
        ViewRootPanelLayout.setHorizontalGroup(
            ViewRootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ViewRootPanelLayout.setVerticalGroup(
            ViewRootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(102, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dữ liệu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        controllerinput.setBackground(new java.awt.Color(102, 255, 255));
        controllerinput.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khởi tạo mảng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Số phần tử (n):");

        controllernumberbyhand.setText("Nhập dãy số");
        controllernumberbyhand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllernumberbyhandActionPerformed(evt);
            }
        });

        controllerInputNumberByRandom.setText("Tạo dãy số ngẫu nhiên");
        controllerInputNumberByRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllerInputNumberByRandomActionPerformed(evt);
            }
        });

        controllerdelete.setText("Xóa dãy số");
        controllerdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllerdeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controllerinputLayout = new javax.swing.GroupLayout(controllerinput);
        controllerinput.setLayout(controllerinputLayout);
        controllerinputLayout.setHorizontalGroup(
            controllerinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerinputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controllerinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(controllerinputLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(controllerInputnumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(controllernumberbyhand, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(controllerInputNumberByRandom)
                    .addComponent(controllerdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        controllerinputLayout.setVerticalGroup(
            controllerinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerinputLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(controllerinputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(controllerInputnumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(controllernumberbyhand)
                .addGap(18, 18, 18)
                .addComponent(controllerInputNumberByRandom)
                .addGap(18, 18, 18)
                .addComponent(controllerdelete)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controllerinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controllerinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controllerSourceCode.setBackground(new java.awt.Color(102, 255, 102));
        controllerSourceCode.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Source Code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        javax.swing.GroupLayout controllerSourceCodeLayout = new javax.swing.GroupLayout(controllerSourceCode);
        controllerSourceCode.setLayout(controllerSourceCodeLayout);
        controllerSourceCodeLayout.setHorizontalGroup(
            controllerSourceCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );
        controllerSourceCodeLayout.setVerticalGroup(
            controllerSourceCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        controllerSelectAlgorithm.setBackground(new java.awt.Color(102, 255, 102));
        controllerSelectAlgorithm.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lựa chọn thuật toán", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        javax.swing.GroupLayout controllerSelectAlgorithmLayout = new javax.swing.GroupLayout(controllerSelectAlgorithm);
        controllerSelectAlgorithm.setLayout(controllerSelectAlgorithmLayout);
        controllerSelectAlgorithmLayout.setHorizontalGroup(
            controllerSelectAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 197, Short.MAX_VALUE)
        );
        controllerSelectAlgorithmLayout.setVerticalGroup(
            controllerSelectAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        controllerControll.setBackground(new java.awt.Color(102, 255, 102));
        controllerControll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Điều khiển", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        controllerControlStartButton.setText("Bắt đâu");
        controllerControlStartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllerControlStartButtonActionPerformed(evt);
            }
        });

        controllerControlStopButton.setText("Kết thúc");
        controllerControlStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controllerControlStopButtonActionPerformed(evt);
            }
        });

        controllerOrder.setBackground(new java.awt.Color(102, 255, 102));

        buttonGroup1.add(controllerSortOrderIncrease);
        controllerSortOrderIncrease.setText("Sắp xếp tăng dần");
        controllerSortOrderIncrease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                controllerSortOrderIncreaseMousePressed(evt);
            }
        });

        buttonGroup1.add(controllerSortOrderDecrease);
        controllerSortOrderDecrease.setText("Sắp xếp giảm dần");
        controllerSortOrderDecrease.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                controllerSortOrderDecreaseMousePressed(evt);
            }
        });

        javax.swing.GroupLayout controllerOrderLayout = new javax.swing.GroupLayout(controllerOrder);
        controllerOrder.setLayout(controllerOrderLayout);
        controllerOrderLayout.setHorizontalGroup(
            controllerOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerOrderLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(controllerOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(controllerSortOrderIncrease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controllerSortOrderDecrease, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        controllerOrderLayout.setVerticalGroup(
            controllerOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controllerSortOrderIncrease)
                .addGap(18, 18, 18)
                .addComponent(controllerSortOrderDecrease)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout controllerControllLayout = new javax.swing.GroupLayout(controllerControll);
        controllerControll.setLayout(controllerControllLayout);
        controllerControllLayout.setHorizontalGroup(
            controllerControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerControllLayout.createSequentialGroup()
                .addGroup(controllerControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controllerControllLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(controllerControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(controllerControlStartButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(controllerControlStopButton, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)))
                    .addGroup(controllerControllLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(controllerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        controllerControllLayout.setVerticalGroup(
            controllerControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controllerControllLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(controllerOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(controllerControlStartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(controllerControlStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ViewRootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(controllerSourceCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(controllerSelectAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(controllerControll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ViewRootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(controllerSourceCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controllerSelectAlgorithm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(controllerControll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jMenuBar1.setToolTipText("");

        moFlileJMenu.setText("File");
        moFlileJMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moFlileJMenuActionPerformed(evt);
            }
        });

        moFlile.setText("Mở file .txt");
        moFlile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moFlileActionPerformed(evt);
            }
        });
        moFlileJMenu.add(moFlile);

        jMenuBar1.add(moFlileJMenu);

        Gioithieu.setText("Giới Thiệu");
        Gioithieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GioithieuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                GioithieuMousePressed(evt);
            }
        });
        jMenuBar1.add(Gioithieu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public JRadioButton[] showListAlgorithmToSelect(JPanel viTri, JRadioButton listJRadioAlgorithm[], ButtonGroup listJRadioAlgorithmButtonGroup, int indexSelected) {
        viTri.setVisible(false);
        viTri.removeAll();
        viTri.validate();
        viTri.repaint();
        listJRadioAlgorithm = new JRadioButton[listSortName.size()];
        listJRadioAlgorithmButtonGroup.clearSelection();
        for (int i = 0; i < listSortName.size(); i++) {
            listJRadioAlgorithm[i] = new JRadioButton();
            listJRadioAlgorithm[i].setText((String) listSortName.get(i));
            listJRadioAlgorithm[i].setSize(200, 60);
            viTri.add(listJRadioAlgorithm[i]);
            listJRadioAlgorithm[i].setLocation(15, 30 * i);
            listJRadioAlgorithm[i].setVisible(true);
            listJRadioAlgorithm[i].setHorizontalAlignment(SwingConstants.LEFT);
            listJRadioAlgorithm[i].setVerticalAlignment(SwingConstants.CENTER);
            listJRadioAlgorithm[i].setFont(new Font("Arial", Font.PLAIN, 14));
            listJRadioAlgorithm[i].setEnabled(true);
            if (indexSelected == -1) {
                listJRadioAlgorithm[i].addActionListener(new listJRadioAlgorithmFirstActionPerformed());
            } else {
                //
            }
            if (i == indexSelected) {//Thuat toan nay da duoc chon
                listJRadioAlgorithm[i].setEnabled(false);
            }
            listJRadioAlgorithmButtonGroup.add(listJRadioAlgorithm[i]);//Dua vao group
        }
        viTri.setVisible(true);
        viTri.validate();
        viTri.repaint();
        return listJRadioAlgorithm;
    }
    public void showArrayOnJPanel_ResetRootJPanel() {
        controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1,1, firstSelected);
    }
    public void resetList() {
        controller.setProgramState(1, controllerSelectAlgorithm, controllerOrder, controllerControll);
        firstSelected = -1;
        controller.setSourceCode(controllerSourceCode, sourceCodeArea, controllerCodeSourceScroll, sourceCodeAreaElement, firstSelected);
        controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
        controller.resetAll(arrayList_1, arrayListOSo_1, firstSelected, listJRadioFirst);
    }
    private void GioithieuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GioithieuMousePressed
        // TODO add your handling code here:
        new thongtin().setVisible(true);
    }//GEN-LAST:event_GioithieuMousePressed

    private void GioithieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GioithieuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_GioithieuMouseClicked

    private void controllernumberbyhandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllernumberbyhandActionPerformed
        if ((int) controllerInputnumberSpinner.getValue() > 1 && (int) controllerInputnumberSpinner.getValue() <= 15) {
            resetList();
            for (int i = 1; i <= (int) controllerInputnumberSpinner.getValue(); i++) {
                controllerInputListJDialog controllerInputListJDialogShow = new controllerInputListJDialog(this, true, i);
                controllerInputListJDialogShow.setVisible(true);
                arrayList_1.add(controllerInputListJDialogShow.soDaNhap);
                arrayListOSo_1.add(new oSo(Integer.toString(controllerInputListJDialogShow.soDaNhap)));
                controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
            }
            setEnabledController(true,false);
            controller.setProgramState(2, controllerSelectAlgorithm, controllerOrder, controllerControll);
            listJRadioFirst = showListAlgorithmToSelect(controllerSelectAlgorithm, listJRadioFirst, listJRadioFirstButtonGroup,-1);
        } else {
            new soluongphantukhonghople().setVisible(true);
        }
    }//GEN-LAST:event_controllernumberbyhandActionPerformed

    private void controllerdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllerdeleteActionPerformed
        // TODO add your handling code here:
        resetList();
        controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
        
    }//GEN-LAST:event_controllerdeleteActionPerformed

    private void controllerSortOrderIncreaseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_controllerSortOrderIncreaseMousePressed
        // TODO add your handling code here:
        chieuSapXep = 1;
    }//GEN-LAST:event_controllerSortOrderIncreaseMousePressed

    private void controllerSortOrderDecreaseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_controllerSortOrderDecreaseMousePressed
        // TODO add your handling code here:
        chieuSapXep = 0;
    }//GEN-LAST:event_controllerSortOrderDecreaseMousePressed

    private void controllerInputNumberByRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllerInputNumberByRandomActionPerformed
        // TODO add your handling code here:
        resetList();
        for (int i = 1; i <= (int) controllerInputnumberSpinner.getValue(); i++) {
            Random ran = new Random();
            int ranInt = ran.nextInt((100 - 0) + 1) + 0;
            arrayList_1.add(ranInt);
            arrayListOSo_1.add(new oSo(Integer.toString(ranInt)));
            controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
        }
        controller.setProgramState(2, controllerSelectAlgorithm, controllerOrder, controllerControll);
        listJRadioFirst = showListAlgorithmToSelect(controllerSelectAlgorithm, listJRadioFirst, listJRadioFirstButtonGroup,-1);       
    }//GEN-LAST:event_controllerInputNumberByRandomActionPerformed

    private void controllerControlStartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllerControlStartButtonActionPerformed
        // TODO add your handling code here:
        if (!arrayList_1.isEmpty() && firstSelected != -1) {
            controllerControlStartButton.setEnabled(false);
            controllerControlStopButton.setEnabled(true);
            try {
                controller.startSort(arrayList_1, arrayListOSo_1, firstSelected, chieuSapXep, ViewRootPanel, controllerControlStartButton);
            } catch (InterruptedException ex) {
            }
        } else {
               
        }
    }//GEN-LAST:event_controllerControlStartButtonActionPerformed

    private void controllerControlStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controllerControlStopButtonActionPerformed
        // TODO add your handling code here:
        resetList();
        controller.stopSort();       
        controllerControlStartButton.setEnabled(true);
        //new Ketthuc().setVisible(true);
        
        //controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
        
             
    }//GEN-LAST:event_controllerControlStopButtonActionPerformed

    private void moFlileJMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moFlileJMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moFlileJMenuActionPerformed

    private void moFlileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moFlileActionPerformed
        // TODO add your handling code here:
        try {
            resetList();
            controller.readFile(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected, chieuSapXep);
            //if (firstAlgorithmSelected != -1) {
                for (int i = 0; i < arrayList_1.size(); i++) {
                    arrayListOSo_1.add(new oSo(arrayList_1.get(i) + ""));
                    controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1, 1, firstSelected);
                }
                controller.setProgramState(2, controllerSelectAlgorithm, controllerOrder, controllerControll);
                listJRadioFirst = showListAlgorithmToSelect(controllerSelectAlgorithm, listJRadioFirst, listJRadioFirstButtonGroup,-1); 
//            } else {
//                controller.setProgramState(1, controllerSelectAlgorithm, controllerOrder, controllerControll);
//            }
        } catch (IOException ex) {
        }
    }//GEN-LAST:event_moFlileActionPerformed
//    public void algorithmSelected(int indexSelected) {
//        listJRadioAlgorithmSecond = showListAlgorithmToSelect(controllerCompareWith, listJRadioAlgorithmSecond, listJRadioAlgorithmSecondButtonGroup, indexSelected);
//    }

    
    public void chuyenRootView(int soLuong) {
        if (soLuong == 1) {
            controller.showArrayOnJPanel_ResetRootJPanel(ViewRootPanel, arrayList_1, arrayListOSo_1,  1, firstSelected);

        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewMain().setVisible(true);
                
            }
        });
    }
    
    private javax.swing.JScrollPane controllerCodeSourceScroll;
    private javax.swing.DefaultListModel sourceCodeArea;
    private javax.swing.JList sourceCodeAreaElement;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Gioithieu;
    private javax.swing.JPanel ViewRootPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton controllerControlStartButton;
    private javax.swing.JButton controllerControlStopButton;
    private javax.swing.JPanel controllerControll;
    private javax.swing.JButton controllerInputNumberByRandom;
    private javax.swing.JSpinner controllerInputnumberSpinner;
    private javax.swing.JPanel controllerOrder;
    private javax.swing.JPanel controllerSelectAlgorithm;
    private javax.swing.JRadioButton controllerSortOrderDecrease;
    private javax.swing.JRadioButton controllerSortOrderIncrease;
    private javax.swing.JPanel controllerSourceCode;
    private javax.swing.JButton controllerdelete;
    private javax.swing.JPanel controllerinput;
    private javax.swing.JButton controllernumberbyhand;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem moFlile;
    private javax.swing.JMenu moFlileJMenu;
    // End of variables declaration//GEN-END:variables
    class listJRadioAlgorithmFirstActionPerformed implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            for (int i = 0; i < listSortName.size(); i++) {
                if (listJRadioFirst[i].isSelected()) {
                    //reset cac giai thuat co the so sanh
                    //secondAlgorithmSelected = -1;
                    //algorithmSelected(i);
                    firstSelected = i;
                    //phatSound.firstAlgorithmSelected_play(firstAlgorithmSelected);
                    chuyenRootView(1);
                    controller.setSourceCode(controllerSourceCode, sourceCodeArea, controllerCodeSourceScroll, sourceCodeAreaElement, firstSelected);
                    controller.setProgramState(4, controllerSelectAlgorithm, controllerOrder, controllerControll);
                    break;
                }
            }
        }
    }
}
